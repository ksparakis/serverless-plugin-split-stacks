service: split-stack-test-4
provider:
  name: aws
  runtime: nodejs18.x
  stage: dev
  region: us-east-1
  profile: ${env:AWS_PROFILE, ''}
  role: customRole

plugins:
  - ../../..
  - serverless-better-credentials

custom:
  splitStacks:
    perType: false
    perFunction: false
    perStackName: true
  uploadsRoute: /uploads
  alerts:
    stages:
      - dev
    topics:
      alarm: "foo"
    definitions:
      functionErrors:
        threshold: 5
      functionThrottles:
        threshold: 10
    function:
      - functionErrors
      - functionThrottles

functions:
  a:
    handler: handlers.a
    stackName: aOK
    events:
      - http:
          path: /a
          method: GET
  b:
    handler: handlers.b
    stackName: bOK
    events:
      - http:
          path: /b
          method: POST
  c:
    handler: handlers.c
    stackName: cOK
    events:
      - http:
          path: /c
          method: PUT

resources:
  Conditions:
    TrueCondition:
      Fn::Equals:
        - foo
        - foo
    FalseCondition:
      Fn::Equals:
        - foo
        - bar

  Resources:
    customRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: ${self:service}-${self:provider.stage}
        Path: "/"
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole
